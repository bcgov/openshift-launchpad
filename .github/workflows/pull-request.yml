name: Continuous Integration

on: pull_request

jobs:
  backend-test:
    name: Run server tests...
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Run server tests
        run: make server-test

  frontend-test:
    name: Run client tests...
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Run client tests
        run: make client-test

  deploy:
    name: Create new instance of client, database and server...
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]

    steps:
      - name: Set env variables
        run: |
          APP_NAME="openshift-launchpad-pr$(echo $GITHUB_REF | sed 's/.*pull\/\([0-9]*\)\/.*/\1/')"
          BRANCH="${{ github.event.pull_request.head.ref }}"
          NAMESPACE="${{ secrets.NAMESPACE_TEST }}"         
          REPO="https://github.com/$GITHUB_REPOSITORY"
          DATABASE="${{ secrets.DATABASE }}"
          
          echo ::set-env name=APP_NAME::$APP_NAME
          echo ::set-env name=NAMESPACE::$NAMESPACE
          echo ::set-env name=POSTGRESQL_DATABASE::$DATABASE
          echo ::set-env name=REPO::$REPO
          echo ::set-env name=BRANCH::$BRANCH
          echo ::set-env name=API_URL::"http://$APP_NAME-server-$NAMESPACE.pathfinder.gov.bc.ca"

      - name: Download OpenShift CLI
        run: |
          wget --quiet -O oc.tar.gz https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          FILE=$(tar --warning=no-unknown-keyword -tf oc.tar.gz | grep '/oc$')
          tar --warning=no-unknown-keyword -zxf oc.tar.gz "$FILE"
          sudo mv "$FILE" /usr/local/bin/oc

      - name: Login to Openshift
        run: oc login https://console.pathfinder.gov.bc.ca:8443 --token=${{ secrets.OPENSHIFT_AUTH_TOKEN_TEST }}

      - name: Checkout
        uses: actions/checkout@v1
      
      - name: Remove existing environment for the PR
        run: |
          make oc-all-clean NAMESPACE=$NAMESPACE APP_NAME=$APP_NAME
          make oc-persisted-clean NAMESPACE=$NAMESPACE APP_NAME=$APP_NAME

      - name: Create Network Security Policy
        run: |
          make create-nsp NAMESPACE=$NAMESPACE APP_NAME=$APP_NAME
          sleep 30s

      - name: Create database
        run: make create-database NAMESPACE=$NAMESPACE APP_NAME=$APP_NAME POSTGRESQL_DATABASE=$POSTGRESQL_DATABASE

      - name: Create server
        run: make create-server NAMESPACE=$NAMESPACE APP_NAME=$APP_NAME REPO=$REPO BRANCH=$BRANCH

      - name: Create client
        run: make create-client NAMESPACE=$NAMESPACE APP_NAME=$APP_NAME REPO=$REPO BRANCH=$BRANCH API_URL=$API_URL
